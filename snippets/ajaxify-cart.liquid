<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/async@2.6.1/dist/async.min.js"></script>
<script>
/**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
Shopify.AjaxifyCart = (function($) {

  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.

  var _config = {

    // What you might want to change
    addToCartBtnLabel:             'Add to cart',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 10, // in milliseconds.
    cartCountSelector:             '#cart_target',
    cartTotalSelector:             '#cart-price',
    // 'aboveForm' for top of add to cart form,
    // 'belowForm' for below the add to cart form, and
    // 'nextButton' for next to add to cart button.
    feedbackPosition:              'nextButton',
    // What you will never need to change
    addToCartBtnSelector:          '[type="submit"]',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxCartURL:            '/cart.js'
    };
  // We need some feedback when adding an item to the cart.
  // Here it is.
    var buildCart = function(cart){
        var domSelector = $('#cart-drawer-inner');
        domSelector.html('');
        $('#cartCount').text(cart.item_count);
        $('.site-header-cart--count').attr('data-header-cart-count', cart.item_count)
        $('#cart_target').text(cart.item_count);
        $('.cart__footer').fadeIn()
        for (i = 0; i < cart.items.length; i++){
            item = cart.items[i];
            var indexPlus = i + 1;
            var str = item.line_price.toString();
            var priceFormatted = '$'+str.substring(0,str.length-2)+"."+str.substring(str.length-2);
            domSelector.append(
                '<div id="cart-contents" class="row" style="">'+
                '<div style="padding: 0 !important;" class="col-4 d-flex align-items-center" data-label="{{ "customer.order.product" | t }}">'+
                '<a href="' + item.url + '"><img src="' + item.image + '" alt="' + item.title + '"/></a>'+
                '</div>'+
                '<div class="col-8 d-flex align-items-center" style="padding: .5em 1em">'+
                '<div class="row" style="width:100%;height:100%;">'+
                '<div class="col-12 d-flex flex-column align-items-start justify-content-between">'+
                '<p><strong>'+ item.title +'</strong></p>'+
                '</div>'+
                // '<div class="col-2 cart-item-info d-flex flex-column align-items-end justify-content-between" data-label="{{ "cart.label.price" | t }}">'+
                // '<div><a href="/cart/change?line='+ indexPlus + '&amp;quantity=0">{{ "cart.general.remove" | t }}</a></div>'+
                // '</div>' +
                '<div class="col-6 d-flex align-items-start justify-content-between update-wrapper">'+
                '<button class="indexDown" >-</button>'+
                '<input style="background:transparent !important;border: none;" type="number" class="update-select field-' + i + ' first-field" name="updates[' + item.key + ']"' +
                'id="'+ item.key + '"'+
                'value="' + item.quantity + '" min="0"/>' +
                '<button class="indexUp" >+</button>'+
                '</div>' +
                '<div class="col-6 d-flex flex-column align-items-end justify-content-between">'+
                  '<div>'+ priceFormatted + '</div>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '</div>'
                );
        }
    };
    var popCart = function(){
        jQuery.getJSON('/cart.js', function(cart) {
            var sbt = cart.total_price.toString();
            var subtotalFormatted ='$'+sbt.substring(0,sbt.length-2)+"."+sbt.substring(sbt.length-2);
            // now have access to Shopify cart object
            $('#cart_target').text(cart.item_count);
            $('.cart__subtotal').text(subtotalFormatted);
            handleEmpty(true);
            $('#cart-drawer-empty').fadeOut();
            buildCart(cart);
            $('.cart-drawer-wrapper').addClass('show');
            $('#cart-drawer').addClass('show');
            bindChangeHandlers();
        } );
    };
    var enableButtons = function (){
      $('.indexDown').prop("disabled", false);
      $('.indexUp').prop("disabled", false);
    }
    var disableButtons = function (){
      $('.indexDown').prop("disabled", true);
      $('.indexUp').prop("disabled", true);
    }
    var handleEmpty = function(check = false){
      if ( check ) {
        jQuery.getJSON('/cart.js', function(cart) {
          if (cart.item_count == 0 ){
            console.log ('check', check)
            $('#cart-contents').fadeOut();
            $('.cart__footer').fadeOut()
            $('#cart-drawer-empty').fadeIn();
          }
        });
      } else {
        console.log ('check', check)
        $('#cart-contents').fadeOut();
        $('.cart__footer').fadeOut()
        $('#cart-drawer-empty').fadeIn();
      }
    };
    var bindChangeHandlers = function(){
      $('.indexDown').click(function(e){
        e.preventDefault();
        var val = parseInt($(this).next('input[type=number]')[0].value);
        var event = new Event('change');
        $(this).next('input[type=number]').attr('value', (val - 1));
        disableButtons()
        $(this).next('input[type=number]')[0].dispatchEvent(event);
      })
      $('.indexUp').click(function(e){
        e.preventDefault();
        var val = parseInt($(this).prev('input[type=number]')[0].value);
        var event = new Event('change');
        $(this).prev('input[type=number]').attr('value', (val + 1));
        disableButtons()
        $(this).prev('input[type=number]')[0].dispatchEvent(event);
      })
      $('.update-select').change(function(e){
        var id = $( this ).attr('id');
        var qty = $( this ).val();
        console.log('id', id, 'qty', qty)
        jQuery.ajax({
          type: 'POST',
          url: '/cart/change.js',
          data: { quantity: qty, id: id },
          dataType: 'json',
          success: function() {
            console.log('updated')
            jQuery.getJSON('/cart.js', function(cart) {
              var sbt = cart.total_price.toString();
              var subtotalFormatted ='$'+sbt.substring(0,sbt.length-2)+"."+sbt.substring(sbt.length-2);
              // now have access to Shopify cart object
              $('.cart__subtotal').text(subtotalFormatted);
              buildCart(cart);
              bindChangeHandlers();
              enableButtons();
              console.log(cart)
              if (cart.item_count == 0){
                handleEmpty();
              };
            } );
          }
        // jQuery.post('/cart/change.js', { quantity: qty, id: id});
      })
    })
  };
    $('.header-cart-opener').click(function(e){
        e.preventDefault();
        popCart();
    });
    var _showFeedback = function(success, html, $addToCartForm){
        $('.ajaxified-cart-feedback').remove();
        var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
    popCart();
    };
var _setText = function($button, label) {
    //if ($button.children().length) {
    //    $button.children().each(function() {
     //   if ($.trim($(this).text()) !== '') {
    //        $(this).text(label);
    //    }
    //    });
   // }
   // else {
     //   $button.val(label).text(label);
    //}
};

  var _init = function() {
    $(document).ready(function() {
        $(_config.addToCartFormSelector).submit(function(e) {
        e.preventDefault();
        var $addToCartForm = $(this);
        var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
        _setText($addToCartBtn, _config.addingToCartBtnLabel);
        //_setText('+ Quick Add');
        $addToCartBtn.addClass('disabled').prop('disabled', true);
        // Add to cart.
        $.ajax({
            url: _config.shopifyAjaxAddURL,
            dataType: 'json',
            type: 'post',
            data: $addToCartForm.serialize(),
            success: function(itemData) {
            // Re-enable add to cart button.
            $addToCartBtn.addClass('inverted');
            _setText($addToCartBtn, _config.addedToCartBtnLabel);
            _showFeedback('success','Added to cart! <a href="/cart">View cart</a>.',$addToCartForm);
            window.setTimeout(function(){
                $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
                //_setText($addToCartBtn,_config.addToCartBtnLabel);
                _setText('+ Quick Add');
            }, _config.howLongTillBtnReturnsToNormal);
            // Update cart count and show cart link.
            $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
                if (_config.cartCountSelector && $(_config.cartCountSelector).size) {
                var value = $(_config.cartCountSelector).html() || '0';
                $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart.item_count)).removeClass('hidden-count');
                $('#cart_target').text({{ cart.item_count }});
                }
                if (_config.cartTotalSelector && $(_config.cartTotalSelector).size ) {
                if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                    var newCurrency = '';
                    if ($('[name="currencies"]').size) {
                    newCurrency = $('[name="currencies"]').val();
                    }
                    else if ($('#currencies span.selected').size) {
                    newCurrency = $('#currencies span.selected').attr('data-currency');
                    }
                    if (newCurrency) {
                    $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                    }
                    else {
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                    }
                }
                else {
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                }
                };
            });
            },
            error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
            response = response.description;
            if (response.slice(0,4) === 'All ') {
                _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
            }
            else {
                _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
            }
        }
        });
        return false;
    });
    });
    };
    return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
        _init();
        });
    },
    getConfig: function() {
      return _config;
    }
  }
})(jQuery);

Shopify.AjaxifyCart.init({ cartCountSelector: '#cart_target' });
// var cartOpener = function (){
//   $('.cart-drawer-wrapper').addClass('show');
//   $('#cart-drawer').addClass('show');
// }
</script>

{{ '//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' | stylesheet_tag }}

<style>
.ajaxified-cart-feedback {
  display: block;
  line-height: 36px;
  font-size: 90%;
  vertical-align: middle;
}
.ajaxified-cart-feedback.success {
  color: black;
}
.ajaxified-cart-feedback.error {
  color: #FF4136;
}
.ajaxified-cart-feedback a {
  border-bottom: 1px solid;
}
</style>
